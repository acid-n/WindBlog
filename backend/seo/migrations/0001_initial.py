# Generated by Django 5.2 on 2025-05-07 18:11

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="GlobalSEOSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "site_verification_google",
                    models.CharField(
                        blank=True,
                        help_text="Код верификации Google Search Console (содержимое meta-тега name='google-site-verification').",
                        max_length=100,
                    ),
                ),
                (
                    "site_verification_yandex",
                    models.CharField(
                        blank=True,
                        help_text="Код верификации Yandex Webmaster (содержимое meta-тега name='yandex-verification').",
                        max_length=100,
                    ),
                ),
                (
                    "robots_crawl_delay",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Crawl-delay для robots.txt (в секундах, используйте с осторожностью!).",
                        null=True,
                    ),
                ),
                (
                    "default_sitemap_priority",
                    models.FloatField(
                        default=0.5,
                        help_text="Приоритет по умолчанию для страниц в sitemap.xml (0.0 - 1.0).",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "default_sitemap_changefreq",
                    models.CharField(
                        choices=[
                            ("always", "Always"),
                            ("hourly", "Hourly"),
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("yearly", "Yearly"),
                            ("never", "Never"),
                        ],
                        default="weekly",
                        help_text="Частота обновления по умолчанию для страниц в sitemap.xml.",
                        max_length=20,
                    ),
                ),
            ],
            options={
                "verbose_name": "Глобальные SEO настройки",
                "verbose_name_plural": "Глобальные SEO настройки",
            },
        ),
        migrations.CreateModel(
            name="RobotsRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_agent",
                    models.CharField(
                        default="*",
                        help_text="Для какого User-agent (например, '*', 'Googlebot').",
                        max_length=255,
                    ),
                ),
                (
                    "directive",
                    models.CharField(
                        choices=[("Allow", "Allow"), ("Disallow", "Disallow")],
                        max_length=10,
                    ),
                ),
                (
                    "path",
                    models.CharField(
                        help_text="Путь, например, '/admin/' или '/private_page'.",
                        max_length=255,
                    ),
                ),
            ],
            options={
                "verbose_name": "Правило robots.txt",
                "verbose_name_plural": "Правила robots.txt",
                "ordering": ["user_agent", "directive", "path"],
            },
        ),
    ]
