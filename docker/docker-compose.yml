services:
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes: [postgres_data:/var/lib/postgresql/data]
    networks: [blog]

  backend:
    build: {context: ../backend, dockerfile: Dockerfile.dev}
    env_file: ../.env
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    depends_on: [db]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 10s
      retries: 3
    networks: [blog]
    volumes: ["../backend:/app", "../media:/app/media"]

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
      args: {API_URL: ${API_URL}}
    env_file: ../.env
    environment:
      NEXT_PUBLIC_API_BASE: ${API_URL}
    depends_on:
      backend:
        condition: service_healthy
    networks: [blog]
    volumes: ["../frontend:/app", "/app/node_modules", "/app/.next"]
    ports: ["3000:3000"]

volumes: {postgres_data: {}}
networks: {blog: {driver: bridge}}
