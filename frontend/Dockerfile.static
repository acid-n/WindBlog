# Многоэтапная сборка для создания статического сайта Next.js
FROM --platform=linux/arm64 node:18-alpine AS builder

# Установка зависимостей для сборки
WORKDIR /app
RUN apk add --no-cache python3 make g++ gcc git

# Копирование файлов проекта
COPY package.json package-lock.json* ./

# Создание файлов конфигурации, отключающих проблемные компоненты
RUN echo 'module.exports = {plugins: {"tailwindcss/nesting": {}, tailwindcss: {}, autoprefixer: {}}}' > postcss.config.js
RUN echo 'module.exports = {reactStrictMode: true, swcMinify: false, output: "export", images: {unoptimized: true}, experimental: {css: false}}' > next.config.js

# Установка зависимостей
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV NEXT_PRIVATE_IGNORE_LIGHTNINGCSS=1
ENV NEXT_DISABLE_LIGHTNINGCSS=1

RUN npm ci --omit=dev --no-fund

# Копирование исходного кода
COPY . .

# Модификация кода для работы без модуля next/font
RUN mkdir -p ./src/app
RUN touch ./src/app/fonts.css
RUN echo '@import url("https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap");' > ./src/app/fonts.css
RUN echo 'body { font-family: "Inter", sans-serif; }' >> ./src/app/fonts.css

# Поиск и замена импорта шрифтов в файлах
RUN find ./src -name "*.tsx" -type f -exec grep -l "Inter" {} \; | xargs -r sed -i 's/import { Inter } from "next\/font\/google";/\/\/ import { Inter } from "next\/font\/google";/g' 
RUN find ./src -name "*.tsx" -type f -exec grep -l "Inter(" {} \; | xargs -r sed -i 's/const inter = Inter(.*);//g'
RUN find ./src -name "*.tsx" -type f -exec grep -l "inter.className" {} \; | xargs -r sed -i 's/\${inter.className}//g'

# Сборка статического сайта
RUN npm run build

# Производственный образ
FROM --platform=linux/arm64 nginx:alpine AS runner

# Копирование статических файлов из этапа сборки
COPY --from=builder /app/out /usr/share/nginx/html

# Копирование конфигурации nginx
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Экспортируем порт
EXPOSE 3000

# Запускаем nginx
CMD ["nginx", "-g", "daemon off;"]
